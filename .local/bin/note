#!/usr/bin/env bash
#
# Note taking.
 
DIR=~/Documents/notes
DATE=`date "+%Y-%m-%d"`

if [ $# -gt 0 ]; then
    TITLE=$*

    found="$TMPDIR"notes.found.$RANDOM
    if [ "$TITLE" == "--recent" ]; then
        find $DIR/ -mtime -7 -iname '*.md' | sed "s|$DIR/||" > $found
    elif [ "$1" == "--search" ]; then
        shift
        rg --smart-case "$*" $DIR
        result=$?
        if [ $result != 0 ]; then
            echo "No notes on '$*'"
        fi
        exit $result
    else
        iname_found="$TMPDIR"notes.found.$RANDOM
        rg --smart-case --sort=modified --files-with-matches "$TITLE" $DIR | sed "s|$DIR/||" > $found
        find $DIR/ -iname "*$TITLE*" | sed "s|$DIR/||" >> $iname_found
        grep --invert-match --line-regexp --file=$found $iname_found >> $found
        rm $iname_found
    fi

    declare -a notes
    count=0
    while read note; do
        notes[$count]=$note
        count=$((count + 1))
    done <$found
    rm $found

    if [ ${#notes[@]} -eq 0 ]; then
        FILE="$DATE $TITLE.md"
        echo "Creating new note: $FILE"
    elif [ ${#notes[@]} -eq 1 ]; then
        FILE=${notes[0]}
        echo "Opening note: $FILE"
    else
        FILE="$DATE $TITLE.md"
        for i in "${!notes[@]}"; do
            echo "[$i]: ${notes[$i]}"
        done

        echo
        echo "Press [ENTER] to create new note $FILE"
        echo -n "  or pick existing note to open [0 - $i]: "
        read pick

        if [ $pick -eq $pick >/dev/null 2>&1 ] \
        && [ $pick -ge 0 >/dev/null 2>&1 ] \
        && [ $pick -le $i ]; then
            FILE=${notes[$pick]}
            echo "Opening note: $FILE"
        elif [ -z "$pick" ]; then
            echo "Creating new note: $FILE"
        else
            echo "No such note: $pick"
            exit 1
        fi
    fi
else
    FILE="note_$DATE.md"
    echo "Quick note: $FILE"
fi

edit() {
    editors=(
        nvim-qt
        neovide
        mvim
        gvim
        $EDITOR
    )

    for editor in "${editors[@]}"; do
        if hash $editor 2>/dev/null; then
            cd "$DIR"
            $editor "$@"
            exit 0
        fi
    done

    echo 'No editor. Set EDITOR env first.'
    exit 1
}

edit "$DIR/$FILE"
